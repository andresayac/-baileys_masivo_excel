import re
from PIL import Image
from io import BytesIO
import base64
import pyqrcode
# Leemos la imagen del c√≥digo QR

imagen_code = "iVBORw0KGgoAAAANSUhEUgAAARQAAAEUCAYAAADqcMl5AAAAAklEQVR4AewaftIAABKpSURBVO3BQY7gRpIAQXei/v9l3z7GKQGCWS1pNszsD9Za64KHtda65GGttS55WGutSx7WWuuSh7XWuuRhrbUueVhrrUse1lrrkoe11rrkYa21LnlYa61LHtZa65KHtda65GGttS55WGutS374SOVvqnhDZao4UXmj4g2VqeKfpDJVTConFW+ovFHxhspJxYnKVHGiclIxqZxUTCp/U8UXD2utdcnDWmtd8rDWWpf8cFnFTSpvqJyonFRMKr9JZap4Q2WqmFTeUJkq3lCZKqaKN1TeqDhReUNlqjip+E0VN6nc9LDWWpc8rLXWJQ9rrXXJD79M5Y2KN1SmipsqTlSmijcq3lCZKt6omFROVE4qpopJ5aRiUvlCZaqYKt5QmVTeUPlNKm9U/KaHtda65GGttS55WGutS374H6NyUnGiMlVMKlPFpPKFyhsqJxWTylQxqUwVb6i8oTJVTCpTxRcqU8Wk8oXKScWk8r/kYa21LnlYa61LHtZa65If/sdVTConFZPKVDGpnFS8UTGpTBWTylQxqUwVk8qJyhsVk8pJxaRyojJVTCpTxRsVk8pJxaRyojJV/C95WGutSx7WWuuSh7XWuuSHX1bxT1I5qZhUTlSmihOVqeJEZaqYVE5UpopJ5aTiDZVJZaqYVCaVqeINlaliUpkqJpWTijcqJpWp4qaKf5OHtda65GGttS55WGutS364TOWfVDGpTBWTylQxqUwVk8pU8YbKVDGpTBWTylQxqUwVk8qJylRxUjGpTBWTyonKVPGbKiaVqWJSmSreUJkqTlT+zR7WWuuSh7XWuuRhrbUusT/4D1M5qZhUTireUJkqTlSmikllqvhNKlPFGypTxYnKScWJym+qOFGZKt5QOan4L3tYa61LHtZa65KHtda65IePVKaKSeWmiqniJpWpYlJ5Q+VE5Q2VqWJSmSomlROVL1RuUpkq3lA5qThRmSomlZOKqWJSOVG5qeI3Pay11iUPa611ycNaa11if/CByhcVk8pU8YbKScWkclJxojJVTConFScqb1T8TSonFScqJxVvqJxU/JeonFS8oTJV3PSw1lqXPKy11iUPa611if3BRSpTxaRyUjGpTBVvqEwVX6hMFZPKVPGGylTxhspUMancVHGiclIxqUwVJyonFZPKVHGiclPFpHJS8YXKVDGpTBVfPKy11iUPa611ycNaa11if/CBylQxqUwV/yUqX1RMKlPFpHJSMam8UXGi8jdVfKEyVUwqU8WJylQxqUwVk8pUcaJyUvGGylTxNz2stdYlD2utdcnDWmtd8sNlKlPFicobFZPKScWJylTxRcWk8kbFpDKpvFFxojJVnKhMFZPKVHGiMlVMKicVJxWTylTxRsWkclPFicpUMVVMKlPFpDJVfPGw1lqXPKy11iUPa611if3BBypTxaRyUnGTyknFicpJxYnKVDGpvFHxhspU8YbKFxVfqEwVb6h8UXGiclLxhcpJxaQyVUwqJxU3Pay11iUPa611ycNaa11if/CByknFpDJVTConFb9J5YuKSWWqmFROKiaVk4pJZap4Q+Wk4kRlqphUpopJ5aTiDZWTijdU3qiYVE4q3lCZKiaVk4ovHtZa65KHtda65GGttS754ZepfFExqUwVk8pJxRcV/6SKE5Wp4g2VL1SmiknlRGWqeEPljYpJ5aTipOKLihOVk4qTit/0sNZalzystdYlD2utdckPf1nFGypTxUnFpHKiclLxhspNKjepTBUnFZPKpDJVTCpTxaQyVZyoTBVTxaQyVZxU3KQyVbyhclJxovJGxRcPa611ycNaa13ysNZal9gfXKRyUnGiMlVMKl9UvKFyUnGiMlVMKlPFicpUMamcVLyh8kbFicobFW+ovFExqUwVk8obFZPKVDGpvFExqUwVk8pUcdPDWmtd8rDWWpc8rLXWJfYHH6h8UXGiclIxqUwVk8obFZPKVHGiMlX8k1S+qDhRmSpOVKaKE5WpYlKZKr5QOamYVE4qvlCZKiaVk4pJZar44mGttS55WGutSx7WWusS+4MPVE4qfpPKVDGpnFT8k1ROKt5QmSreUHmj4g2VqeJEZaqYVN6omFS+qHhD5aRiUpkqvlA5qfjiYa21LnlYa61LHtZa6xL7g4tU3qiYVE4qvlCZKr5QmSomlaliUjmpOFGZKm5SmSpOVKaKE5WpYlKZKk5UpoovVKaKSWWq+E0qU8WkMlX8TQ9rrXXJw1prXfKw1lqX/HBZxRsqJxU3VZyoTBWTylTxhspU8YbKVDGpTBVvqEwVk8pJxRcqU8WkclIxqZxUnFS8oTJVvKHyX/aw1lqXPKy11iUPa611if3BBypTxRcqJxVvqEwVb6icVEwqU8UbKlPFicobFV+oTBUnKlPFpHJScZPKScWJym+quEnljYovHtZa65KHtda65GGttS754ZepnFScVEwqU8Wk8obKVDFVTCpfqLyh8kbFpDKpTBWTylRxonJScVLxhspJxaTyhspUMVVMKlPFFyonFZPKVDFV/E0Pa611ycNaa13ysNZal9gffKAyVUwqU8Wk8kbFpDJVTConFZPKVPGGylRxojJVTCpfVHyhMlV8ofJGxaQyVUwqb1S8ofJGxRcqJxWTyknFb3pYa61LHtZa65KHtda65IePKt5QOak4UZkqTipuUjmpmFROKiaVqeJEZao4UZkqblKZKqaKSWWqOKk4qZhUTlROKk4qJpUvVE4qJpWTihOVqeKLh7XWuuRhrbUueVhrrUvsDz5QOamYVKaKSeWkYlKZKiaVqWJSmSr+zVS+qJhUTiomlZOKL1SmihOVNypuUpkqJpWTir9J5aTii4e11rrkYa21LnlYa61Lfris4qRiUjmpOKmYVE5UpopJZap4Q+WNiknlpGJSmSomlZOKSWVSmSomlUllqrhJ5SaVqeJEZaqYVKaKE5WpYlJ5o+Kf9LDWWpc8rLXWJQ9rrXWJ/cFFKlPFpPKbKiaVNypOVKaKSWWqmFROKt5QOak4UflNFScqU8UXKm9UTCpTxaTyX1IxqZxUfPGw1lqXPKy11iUPa611yQ+XVXxR8YbKpPJGxU0Vk8pJxRsqJxUnKicVb6hMFScqJypTxaTyRcVJxU0Vk8pJxRsqb1RMKjc9rLXWJQ9rrXXJw1prXfLDRyq/SWWqeKNiUrlJ5TepTBWTyonKVDGpnKhMFScqb1ScqJxU3KRyUjGpvFExqZyoTBVfqPymh7XWuuRhrbUueVhrrUt+uKxiUvmi4o2Kk4pJ5aTii4pJ5URlqrhJ5Y2KLyomlZtUpoo3VKaKNyreUHmj4o2Kk4rf9LDWWpc8rLXWJQ9rrXWJ/cFFKlPFicpNFZPKVHGTylQxqUwVJypTxaQyVbyh8psq3lB5o+JEZaqYVKaKE5UvKk5UflPFpHJS8cXDWmtd8rDWWpc8rLXWJT/8ZSonFTdVnKhMFZPKScVNFZPKVDGpvFExqZxUTCo3VUwqU8Wk8obKGypTxaQyVUwqX1RMKlPFicpJxW96WGutSx7WWuuSh7XWuuSHj1SmiknlpGJSOal4Q+Wk4guVN1ROKm6qmFR+k8pUcaIyVbxRcVPFpDJVTCpTxaRyUjGpnKicVJyonFR88bDWWpc8rLXWJQ9rrXXJDx9VnFScqEwVJypTxaQyVUwqk8obFZPKGxU3VUwqk8pJxaTyRsWk8oXKVPE3qUwVk8pUcVJxojJVnKhMFW9UTCo3Pay11iUPa611ycNaa11if3CRyhcVk8obFZPKFxWTylRxonJS8YbKVDGpTBWTyhcVk8pUcaIyVUwqJxWTyt9UMancVHGiclIxqbxR8cXDWmtd8rDWWpc8rLXWJT98pHJSMalMFScVk8pUMamcVJyo/E0qU8VJxaTyRsWkMlW8UfFGxRsVk8oXFZPKVHGi8kbFpDJVnKicVEwqU8Wk8pse1lrrkoe11rrkYa21Lvnho4pJ5aRiUpkqJpUTlS9UpopJ5YuKSWWqmFSmii9UTip+k8pJxYnKVDGpvKFyojJVvFExqUwVk8oXKl9U3PSw1lqXPKy11iUPa611yQ//chVvqJyovFExqUwqU8UXFZPKVHFSMalMFW+onFScVEwqJxUnKm9UTCpfVEwqk8pUMam8UTGpTBVvVEwqU8UXD2utdcnDWmtd8rDWWpf8cFnFicpUcaJyUjFVTCpTxYnKVHFS8UbFicoXKm+o3KRyUjGpTBUnFScqJxVfqJxUTCpvVEwqb6hMFX/Tw1prXfKw1lqXPKy11iU/fKQyVbyhMlVMFScqJxWTyhcVJypTxaQyVbyhMlW8oXJSMal8UXFSMalMFZPKVHGiclIxqUwVb6hMFZPKGxWTyr/Zw1prXfKw1lqXPKy11iX2B79I5W+qmFSmikllqnhD5aTiRGWqmFSmihOVNyreUPlNFZPKScWk8kbFicpUMalMFScqX1RMKlPFpPJGxRcPa611ycNaa13ysNZal/zwkcpvqphUpoovKiaVNyomlTcqJpUTlaliqphU3lCZKk4qTlROKiaVk4pJ5aTiJpWpYlI5qXhD5aRiUpkq/qaHtda65GGttS55WGutS+wPLlI5qZhUpopJ5aTiDZWTiknlpGJSOal4Q+WLijdUTipOVL6omFROKt5QmSomlZOKSWWqmFS+qJhUpooTlaniNz2stdYlD2utdcnDWmtdYn9wkcpNFZPKScWkMlVMKicVf5PKFxWTyhsVk8pJxYnKScWkclJxojJVTCpTxYnKVDGpTBVvqHxR8YbKVHHTw1prXfKw1lqXPKy11iU/fKQyVUwqU8WJyqQyVXyh8obKScUbKjdVvFHxRcWkclIxqUwqU8WJyknFpDJVTConFZPKicobFZPKFyonFZPKVPHFw1prXfKw1lqXPKy11iU/fFRxUvFFxYnKScWk8kbFpHKiclPFpHKTyhsqU8WkMqmcVEwqJxWTyknFpHJSMamcVJyonKhMFScqk8pU8U96WGutSx7WWuuSh7XWuuSHj1SmihOVqWKqmFTeqHijYlI5qZhUpopJZaqYVKaKSeUNlanipOJEZaqYVN6omFSmihOVqWJSOan4omJSmSr+SypuelhrrUse1lrrkoe11rrE/uAvUjmpeENlqjhROamYVE4q3lD5omJSmSomlaliUrmp4kTljYpJ5TdVnKhMFb9JZar4N3tYa61LHtZa65KHtda65IdfpvKGyk0qU8WJylRxovJGxaTyN6mcVEwqJxWTylRxUjGpTCpfVEwqU8UbFZPKFxWTyonKScWJyknFFw9rrXXJw1prXfKw1lqX/PCRyhsVk8pUcaIyVbyhclJxonJS8UbFicobKlPFpDJVTCpTxRsVJxWTylRxojJVvFFxonJScVLxhspJxaQyVfybPKy11iUPa611ycNaa11if/CByhcVJypTxRsqJxWTyhsVb6hMFZPKGxVvqPymiknli4o3VKaKSWWqmFSmiknlpGJS+Tep+E0Pa611ycNaa13ysNZal9gf/IepvFHxhspUMalMFW+oTBVvqNxU8YbKVPGbVKaKSeWkYlKZKk5UpopJZaqYVE4q3lA5qThRmSq+eFhrrUse1lrrkoe11rrkh49U/qaKqeJE5Q2VqeKk4kRlqpgqTlSmipOKE5U3VKaKN1SmiknlC5U3VKaKE5WpYlKZKm5SmSpOKiaVv+lhrbUueVhrrUse1lrrkh8uq7hJ5UTlpooTlZOKE5WpYlI5UZkq3qiYVE4q3lCZKiaVNyq+UPk3qZhUTiq+qJhUpoqbHtZa65KHtda65GGttS754ZepvFHxRcWkcqLyRsUbFZPKScWJyhcqJypfVEwqU8WkMlWcqEwVk8pJxRsVk8qJylQxqZyofKEyVZyoTBVfPKy11iUPa611ycNaa13yw/8YlaniJpWpYlJ5Q2WqOKmYVKaKSWWqmFS+qDipmFROVKaKqeILlaliUpkqTiomlTcqJpUvKk4qJpWbHtZa65KHtda65GGttS754f8ZlaliUpkqJpWbKt5QmSpOKiaVNypuqphUpopJ5aTijYqTikllqphUpopJZap4o+INlZOK3/Sw1lqXPKy11iUPa611yQ+/rOI3VZyovFFxUjGpvFExqbxRcaIyVUwVJyonKicVk8pNFZPKTSpTxaTyRsWkMlWcqEwVb1T8TQ9rrXXJw1prXfKw1lqX/HCZyt+kMlVMFZPKpDJVvFExqdxUMamcVPxNFX+TylTxhspU8ZtUTlROKiaVqWKqmFT+poe11rrkYa21LnlYa61L7A/WWuuCh7XWuuRhrbUueVhrrUse1lrrkoe11rrkYa21LnlYa61LHtZa65KHtda65GGttS55WGutSx7WWuuSh7XWuuRhrbUueVhrrUv+D0zg925wNL72AAAAAElFTkSuQmCC"
image = Image.open(BytesIO(base64.b64decode(imagen_code)))
image.show()